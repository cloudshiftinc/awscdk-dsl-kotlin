@file:Suppress("RedundantVisibilityModifier","RedundantUnitReturnType","RemoveRedundantQualifierName","unused","UnusedImport","ClassName","REDUNDANT_PROJECTION","DEPRECATION")

package cloudshift.awscdk.dsl.services.databrew

import cloudshift.awscdk.common.CdkDslMarker
import kotlin.String
import software.amazon.awscdk.IResolvable
import software.amazon.awscdk.services.databrew.CfnJob

@CdkDslMarker
public class CfnJobDatabaseOutputPropertyDsl {
  private val cdkBuilder: CfnJob.DatabaseOutputProperty.Builder =
      CfnJob.DatabaseOutputProperty.builder()

  /**
   * @param databaseOptions Represents options that specify how and where DataBrew writes the
   * database output generated by recipe jobs. 
   */
  public fun databaseOptions(databaseOptions: IResolvable) {
    cdkBuilder.databaseOptions(databaseOptions)
  }

  /**
   * @param databaseOptions Represents options that specify how and where DataBrew writes the
   * database output generated by recipe jobs. 
   */
  public fun databaseOptions(databaseOptions: CfnJob.DatabaseTableOutputOptionsProperty) {
    cdkBuilder.databaseOptions(databaseOptions)
  }

  /**
   * @param databaseOutputMode The output mode to write into the database.
   * Currently supported option: NEW_TABLE.
   */
  public fun databaseOutputMode(databaseOutputMode: String) {
    cdkBuilder.databaseOutputMode(databaseOutputMode)
  }

  /**
   * @param glueConnectionName The AWS Glue connection that stores the connection information for
   * the target database. 
   */
  public fun glueConnectionName(glueConnectionName: String) {
    cdkBuilder.glueConnectionName(glueConnectionName)
  }

  public fun build(): CfnJob.DatabaseOutputProperty = cdkBuilder.build()
}
