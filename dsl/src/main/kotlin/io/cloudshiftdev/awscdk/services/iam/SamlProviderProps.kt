package io.cloudshiftdev.awscdk.services.iam

import io.cloudshiftdev.awscdk.CdkObject
import io.cloudshiftdev.awscdk.common.CdkDslMarker
import kotlin.String
import kotlin.Unit

public interface SamlProviderProps {
  /**
   * An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document
   * includes the issuer's name, expiration information, and keys that can be used to validate the SAML
   * authentication response (assertions) that are received from the IdP. You must generate the
   * metadata document using the identity management software that is used as your organization's IdP.
   */
  public fun metadataDocument(): SamlMetadataDocument

  /**
   * The name of the provider to create.
   *
   * This parameter allows a string of characters consisting of upper and
   * lowercase alphanumeric characters with no spaces. You can also include
   * any of the following characters: _+=,.&#64;-
   *
   * Length must be between 1 and 128 characters.
   *
   * Default: - a CloudFormation generated name
   */
  public fun name(): String? = unwrap(this).getName()

  /**
   * A builder for [SamlProviderProps]
   */
  @CdkDslMarker
  public interface Builder {
    /**
     * @param metadataDocument An XML document generated by an identity provider (IdP) that supports
     * SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be
     * used to validate the SAML authentication response (assertions) that are received from the IdP.
     * You must generate the metadata document using the identity management software that is used as
     * your organization's IdP. 
     */
    public fun metadataDocument(metadataDocument: SamlMetadataDocument)

    /**
     * @param name The name of the provider to create.
     * This parameter allows a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include
     * any of the following characters: _+=,.&#64;-
     *
     * Length must be between 1 and 128 characters.
     */
    public fun name(name: String)
  }

  private class BuilderImpl : Builder {
    private val cdkBuilder: software.amazon.awscdk.services.iam.SamlProviderProps.Builder =
        software.amazon.awscdk.services.iam.SamlProviderProps.builder()

    /**
     * @param metadataDocument An XML document generated by an identity provider (IdP) that supports
     * SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be
     * used to validate the SAML authentication response (assertions) that are received from the IdP.
     * You must generate the metadata document using the identity management software that is used as
     * your organization's IdP. 
     */
    override fun metadataDocument(metadataDocument: SamlMetadataDocument) {
      cdkBuilder.metadataDocument(metadataDocument.let(SamlMetadataDocument::unwrap))
    }

    /**
     * @param name The name of the provider to create.
     * This parameter allows a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include
     * any of the following characters: _+=,.&#64;-
     *
     * Length must be between 1 and 128 characters.
     */
    override fun name(name: String) {
      cdkBuilder.name(name)
    }

    public fun build(): software.amazon.awscdk.services.iam.SamlProviderProps = cdkBuilder.build()
  }

  private class Wrapper(
    override val cdkObject: software.amazon.awscdk.services.iam.SamlProviderProps,
  ) : CdkObject(cdkObject), SamlProviderProps {
    /**
     * An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document
     * includes the issuer's name, expiration information, and keys that can be used to validate the
     * SAML authentication response (assertions) that are received from the IdP. You must generate the
     * metadata document using the identity management software that is used as your organization's
     * IdP.
     */
    override fun metadataDocument(): SamlMetadataDocument =
        unwrap(this).getMetadataDocument().let(SamlMetadataDocument::wrap)

    /**
     * The name of the provider to create.
     *
     * This parameter allows a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include
     * any of the following characters: _+=,.&#64;-
     *
     * Length must be between 1 and 128 characters.
     *
     * Default: - a CloudFormation generated name
     */
    override fun name(): String? = unwrap(this).getName()
  }

  public companion object {
    public operator fun invoke(block: Builder.() -> Unit = {}): SamlProviderProps {
      val builderImpl = BuilderImpl()
      return Wrapper(builderImpl.apply(block).build())
    }

    internal fun wrap(cdkObject: software.amazon.awscdk.services.iam.SamlProviderProps):
        SamlProviderProps = Wrapper(cdkObject)

    internal fun unwrap(wrapped: SamlProviderProps):
        software.amazon.awscdk.services.iam.SamlProviderProps = (wrapped as CdkObject).cdkObject as
        software.amazon.awscdk.services.iam.SamlProviderProps
  }
}
