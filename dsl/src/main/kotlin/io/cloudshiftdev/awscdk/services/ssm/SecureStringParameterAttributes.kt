package io.cloudshiftdev.awscdk.services.ssm

import io.cloudshiftdev.awscdk.common.CdkDslMarker
import io.cloudshiftdev.awscdk.services.kms.IKey
import kotlin.Boolean
import kotlin.Number
import kotlin.String
import kotlin.Unit

public interface SecureStringParameterAttributes : CommonStringParameterAttributes {
    /**
     * The encryption key that is used to encrypt this parameter.
     *
     * Default: - default master key
     */
    public fun encryptionKey(): IKey? = unwrap(this).getEncryptionKey()?.let(IKey::wrap)

    /**
     * The version number of the value you wish to retrieve.
     *
     * Default: - AWS CloudFormation uses the latest version of the parameter
     */
    public fun version(): Number? = unwrap(this).getVersion()

    /** A builder for [SecureStringParameterAttributes] */
    @CdkDslMarker
    public interface Builder {
        /** @param encryptionKey The encryption key that is used to encrypt this parameter. */
        public fun encryptionKey(encryptionKey: IKey)

        /**
         * @param parameterName The name of the parameter store value. This value can be a token or
         *   a concrete string. If it is a concrete string and includes "/" it must also be prefixed
         *   with a "/" (fully-qualified).
         */
        public fun parameterName(parameterName: String)

        /**
         * @param simpleName Indicates if the parameter name is a simple name (i.e. does not include
         *   "/" separators). This is required only if `parameterName` is a token, which means we
         *   are unable to detect if the name is simple or "path-like" for the purpose of rendering
         *   SSM parameter ARNs.
         *
         * If `parameterName` is not specified, `simpleName` must be `true` (or undefined) since the
         * name generated by AWS CloudFormation is always a simple name.
         */
        public fun simpleName(simpleName: Boolean)

        /** @param version The version number of the value you wish to retrieve. */
        public fun version(version: Number)
    }

    private class BuilderImpl : Builder {
        private val cdkBuilder:
            software.amazon.awscdk.services.ssm.SecureStringParameterAttributes.Builder =
            software.amazon.awscdk.services.ssm.SecureStringParameterAttributes.builder()

        /** @param encryptionKey The encryption key that is used to encrypt this parameter. */
        override fun encryptionKey(encryptionKey: IKey) {
            cdkBuilder.encryptionKey(encryptionKey.let(IKey::unwrap))
        }

        /**
         * @param parameterName The name of the parameter store value. This value can be a token or
         *   a concrete string. If it is a concrete string and includes "/" it must also be prefixed
         *   with a "/" (fully-qualified).
         */
        override fun parameterName(parameterName: String) {
            cdkBuilder.parameterName(parameterName)
        }

        /**
         * @param simpleName Indicates if the parameter name is a simple name (i.e. does not include
         *   "/" separators). This is required only if `parameterName` is a token, which means we
         *   are unable to detect if the name is simple or "path-like" for the purpose of rendering
         *   SSM parameter ARNs.
         *
         * If `parameterName` is not specified, `simpleName` must be `true` (or undefined) since the
         * name generated by AWS CloudFormation is always a simple name.
         */
        override fun simpleName(simpleName: Boolean) {
            cdkBuilder.simpleName(simpleName)
        }

        /** @param version The version number of the value you wish to retrieve. */
        override fun version(version: Number) {
            cdkBuilder.version(version)
        }

        public fun build(): software.amazon.awscdk.services.ssm.SecureStringParameterAttributes =
            cdkBuilder.build()
    }

    private class Wrapper
    internal constructor(
        internal val cdkObject: software.amazon.awscdk.services.ssm.SecureStringParameterAttributes,
    ) : SecureStringParameterAttributes {
        /**
         * The encryption key that is used to encrypt this parameter.
         *
         * Default: - default master key
         */
        override fun encryptionKey(): IKey? = unwrap(this).getEncryptionKey()?.let(IKey::wrap)

        /**
         * The name of the parameter store value.
         *
         * This value can be a token or a concrete string. If it is a concrete string and includes
         * "/" it must also be prefixed with a "/" (fully-qualified).
         */
        override fun parameterName(): String = unwrap(this).getParameterName()

        /**
         * Indicates if the parameter name is a simple name (i.e. does not include "/" separators).
         *
         * This is required only if `parameterName` is a token, which means we are unable to detect
         * if the name is simple or "path-like" for the purpose of rendering SSM parameter ARNs.
         *
         * If `parameterName` is not specified, `simpleName` must be `true` (or undefined) since the
         * name generated by AWS CloudFormation is always a simple name.
         *
         * Default: - auto-detect based on `parameterName`
         */
        override fun simpleName(): Boolean? = unwrap(this).getSimpleName()

        /**
         * The version number of the value you wish to retrieve.
         *
         * Default: - AWS CloudFormation uses the latest version of the parameter
         */
        override fun version(): Number? = unwrap(this).getVersion()
    }

    public companion object {
        init {}

        public operator fun invoke(
            block: Builder.() -> Unit = {}
        ): SecureStringParameterAttributes {
            val builderImpl = BuilderImpl()
            return Wrapper(builderImpl.apply(block).build())
        }

        internal fun wrap(
            cdkObject: software.amazon.awscdk.services.ssm.SecureStringParameterAttributes
        ): SecureStringParameterAttributes = Wrapper(cdkObject)

        internal fun unwrap(
            wrapped: SecureStringParameterAttributes
        ): software.amazon.awscdk.services.ssm.SecureStringParameterAttributes =
            (wrapped as Wrapper).cdkObject
    }
}
